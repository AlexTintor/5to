--FUNCION DE LA TABLA EN LINEA QUE RECIBA EL AÑO Y REGRESE EL DIA DE LA SEMANA
--Y EL IMOPORTE TOTAL DE VENTA DE ESE DIA
CREATE FUNCTION DBO.FN_VENTASDIA(@AÑO INT)
RETURNS TABLE 
AS RETURN(
SELECT CLAVE = DATEPART(DW, O.OrderDate), DIA = DATENAME(DW, O.ORDERDATE),
TOTAL = SUM(D.QUANTITY*D.UNITPRICE)
FROM ORDERS O
INNER JOIN [ORDER DETAILS] D ON D.ORDERID = O.ORDERID
WHERE YEAR(O.ORDERDATE) = @AÑO
GROUP BY DATENAME(DW, O.ORDERDATE), DATEPART(DW, O.ORDERDATE))
GO

SELECT * FROM DBO.FN_VENTASDIA(2000) ORDER BY CLAVE

--PROBLMAS, NO APARECEN LOS 7 DIAS DE LA SEMANA
CREATE FUNCTION DBO.FN_DIASSEMANA()
RETURNS TABLE
AS RETURN(
	SELECT 
	CLAVE = 1, NOMBRE = 'SUNDAY' UNION
	SELECT 2,'MONDAY' UNION
	SELECT 3,'TUESDAY' UNION
	SELECT 4,'WEDNESDAY' UNION
	SELECT 5,'THURSDAY' UNION
	SELECT 6,'FRIDAY' UNION
	SELECT 7,'SATURDAY' )
--EJECUCOION
SELECT * FROM DBO.FN_DIASSEMANA()

--SOLUCION A
SELECT D.NOMBRE, TOTAL = ISNULL(V.TOTAL, 0)
FROM DBO.FN_DIASSEMANA() D
LEFT OUTER JOIN DBO.FN_VENTASDIA(2000) V ON V.CLAVE = D.CLAVE
ORDER BY D.CLAVE

--SOLUCION B
--FUNCION DE TABLA EN LINEA QUE RECIBA EL AÑO Y REGRESE EL DIA DE LA SEMANA
--Y EL IMPORTE TOTAL DE VENTAS DE ESE DIA
ALTER FUNCTION DBO.FN_VENTASDIA(@AÑO INT)
RETURNS TABLE
AS RETURN(
SELECT S.CLAVE, DIA = S.NOMBRE, TOTAL = ISNULL(SUM(D.QUANTITY*D.UNITPRICE), 0)
FROM DBO.FN_DIASSEMANA() S
LEFT OUTER JOIN ORDERS O ON S.CLAVE = DATEPART(DW, O.ORDERDATE)
LEFT OUTER JOIN [Order Details] D ON D.OrderID = O.OrderID AND YEAR(O.OrderDate) = @AÑO
GROUP BY S.NOMBRE, S.CLAVE)
GO
SELECT * FROM DBO.FN_VENTASDIA(1997) O ORDER BY 1

/*III.- Las funciones de tabla de multi sentencias
Son similares a los procedimientos almacenados, excepto que regresan una tabla siempre.
Este tipo de funcion se usa en situaciones donde se requiere más logica y proceso.
Su sintaxis es:*/

CREATE FUNCTION [PROPIETARIO]NOMBREFUNCION
(@PARAMETROS TipoDato [= default], ... )
RETURNS @nomTabla TABLE (nomCol tipo_dato, ...)
AS
BEGIN
	cuerpoFuncion
	--llenar la tabla @nomTabla
	RETURN
END
--EJECUCION
SELECT * FROM DBO.nombrefuncion(parametros)

--FUINCION DE TABLA MULTISENTENCIA QUE REGRESE LOS DIAS DE LA SEMANA
CREATE FUNCTION DBO.FN_DIASSEMANA2()
RETURNS @SEMANA TABLE (CLAVE INT, NOMBRE VARCHAR(20))
AS
BEGIN
	INSERT @SEMANA VALUES (1,'SUNDAY')
	INSERT @SEMANA VALUES (2,'MONDAY')
	INSERT @SEMANA VALUES (3,'TUESDAY')
	INSERT @SEMANA VALUES (4,'WEDNESDAY')
	INSERT @SEMANA VALUES (5,'THURSDAY')
	INSERT @SEMANA VALUES (6,'FRIDAY')
	INSERT @SEMANA VALUES (7,'SATURDAY')
	RETURN
END
GO
SELECT * FROM DBO.FN_DIASSEMANA2()

--CONSULTA CON EL DIA DE LA SEMANA Y EL TOTAL DE ORDENES REALIZADAS,
--SE DEBEN MOSTRAR LOS 7 DIAS DE LA SEMANA
SELECT DATENAME(DW, O.ORDERDATE), COUNT(O.ORDERID)
FROM ORDERS O
GROUP BY DATENAME(DW,O.OrderDate)
GO
SELECT D.NOMBRE, COUNT(O.ORDERID)
FROM DBO.FN_DIASSEMANA2() D
LEFT OUTER JOIN ORDERS O ON DATEPART(DW, O.OrderDate) = D.CLAVE
GROUP BY D.NOMBRE, D.CLAVE
ORDER BY D.CLAVE

--FUNCION MULTISENTENCIA QUE RECIBA UN AÑO, REGRESE EL NOMBRE DEL EMPLEADO Y EL TOTAL DE VENTAS DE LOS 
--EMPLEADOS DE ESE AÑO. MOSTRAR TODOS LOS EMPLREADOS AUNQUE NO HAYAN REALIZADO ORDENES
CREATE FUNCTION FN_VENTAS(@AÑO INT)
RETURNS @VENTAS TABLE (NOMEMP VARCHAR(100), TOTAL NUMERIC(12,2))
AS
BEGIN
	INSERT @VENTAS
	SELECT E.FirstName+' '+E.LastName, TOATL = ISNULL(SUM(QUANTITY*UNITPRICE), 0)
	FROM ORDERS O 
	RIGHT OUTER JOIN [Order Details] D ON O.OrderID = D.OrderID
	RIGHT OUTER JOIN Employees E ON E.EmployeeID = O.EmployeeID AND YEAR(O.OrderDate) = @AÑO
	GROUP BY E.FirstName, E.LastName
	RETURN
END
--EJECUCION
SELECT * FROM FN_VENTAS(2000)
