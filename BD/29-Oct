--insersion masiva
insert materiales 
select productid, productname, unitprice from products
where ProductID > 2
---------------------------------------------------------------------------- Tranzaciones explicitas
--Validar que realmente ser ejecute un ROLLBACK(deshacer una transaccion)

BEGIN TRAN 
	UPDATE PRODUCTS SET UnitPrice = 111
	SELECT ProductID, UnitPrice FROM Products
ROLLBACK TRAN --Se desace la transaccion

COMMIT TRAN --Se deshace la transaccion

SELECT * FROM Products

--Validar que al actualizar el precio de un material no sea con un precio menor
CREATE TRIGGER TR_MATERIALS_UP
ON MATERIALES FOR UPDATE AS
DECLARE @PRECIOVIEJO NUMERIC(12,2), @PRECIONUEVO NUMERIC(12,2)

SELECT @PRECIONUEVO = PRECIO FROM INSERTED 
SELECT @PRECIOVIEJO = PRECIO FROM deleted

IF @PRECIONUEVO < @PRECIOVIEJO
BEGIN
	ROLLBACK TRAN
	RAISERROR('ERROR AL ACTUALIZAR EL PRECIO, EL PRECIO NUEVO ES MENOR',16,1)
END
GO
SELECT * FROM MATERIALES WHERE CLAVE = 40
--NO DEJA
UPDATE MATERIALES SET PRECIO = 25 WHERE CLAVE = 40
--SI DEJA
UPDATE MATERIALES SET PRECIO = 28 WHERE CLAVE = 40

--es preligroso una actualizacion masiva
UPDATE MATERIALES SET PRECIO = 20

--NO PERMITIR UNA ACTUALIZACION MASIVA EN LAS TABLAS MATERIALES
CREATE TRIGGER TR_MATERIALES_UPD
ON MATERIALES FOR UPDATE AS
	DECLARE @CONTA INT

	SELECT @CONTA = COUNT(*) FROM inserted

	IF @CONTA > 1
	BEGIN
		ROLLBACK TRAN
		RAISERROR('NO SE PERMITEN ACTUALIZACIONES MASIVAS', 16, 1)
	END
GO
--NO ES PERMITIDO
UPDATE MATERIALES SET PRECIO = 1000

--ES PERMITIDO
UPDATE MATERIALES SET PRECIO = 55 WHERE CLAVE = 21

SELECT * FROM MATERIALES WHERE CLAVE = 21


--NO PERMITIR QUE SE ELIMINEN REGISTROS EN LA TABLA MATERIALES
CREATE TRIGGER TR_MATERIALES_DELETE2
ON MATERIALES FOR DELETE AS

	ROLLBACK TRAN
	RAISERROR('POR EL MOMENTO NO SSE PUEDE ELIMINAR REGISTROS', 16, 1)

GO
--EJECUCION
DELETE MATERIALES WHERE CLAVE = 11


--SELECT
--RFC = EMPRFC --ASCII(SUBSTRING(EMPRFC,1,1))...

